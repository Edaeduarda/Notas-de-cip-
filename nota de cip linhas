function media(lista) {
    var tamanho = lista.length;
    var soma = 0;
    for (let i = 0; i < tamanho; i++) {
        if (lista[i] == undefined) {
            continue
        }
        soma += lista[i];
    }
    var calculo_media = soma / tamanho;
    return calculo_media;
}


 // RECEITA OPICIONAL 

    function notaGeral(receita_linha) {
    if (receita_linha == 2) {
        let nota_tempo_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA');
        let nota_concentracao_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA');
      
     
      
        let nota_tempo_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE');
        let nota_concentracao_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE');

        let nota_tempo_acido = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO');
        let note_concentracao_acido = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO');

        if (
            nota_tempo_alcalina != 0 && nota_concentracao_alcalina != 0 &&
            nota_tempo_sanitizante != 0 && nota_concentracao_sanitizante &&
            nota_tempo_acido != 0 && note_concentracao_acido != 0  
            
            
      )
         {
            let media = nota_tempo_alcalina + nota_concentracao_alcalina +  nota_tempo_sanitizante + nota_concentracao_sanitizante + nota_tempo_acido + note_concentracao_acido;
            media = media / 6.0;
            return media;

        }
        else {
            return 0
        }
    }

 // RECEITA PERIODICO 

        else if (receita_linha == 1) {
        let nota_tempo_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA');
        let nota_concentracao_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA');
        

        let nota_tempo_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE');
        let nota_concentracao_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE');

        let nota_tempo_acido = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO');
        let note_concentracao_acido = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO');

        if (
            nota_tempo_alcalina != 0 && nota_concentracao_alcalina != 0 &&
            nota_tempo_sanitizante != 0 && nota_concentracao_sanitizante &&
            nota_tempo_acido != 0 && note_concentracao_acido != 0 
           
          )
         {
            let media = nota_tempo_alcalina + nota_concentracao_alcalina  + nota_tempo_sanitizante + nota_concentracao_sanitizante + nota_tempo_acido + note_concentracao_acido;
            media = media / 6.0;
            return media;

        }
        else {
            return 0
        }
    }

      // RECEITA ROTINA

    else if (receita_linha == 3) {

        let nota_tempo_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE');
        let nota_concentracao_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE');
      
      
        let nota_tempo_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA');
        let note_concentracao_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA');

        if (
            nota_tempo_sanitizante != 0 && nota_concentracao_sanitizante &&
            nota_tempo_alcalina != 0 && note_concentracao_alcalina != 0
           
        ) {
            let media = nota_tempo_sanitizante + nota_concentracao_sanitizante  + note_concentracao_alcalina  
           ;
            media = media / 4.0;
            return media;

        }
        else {
            return 0
        }
    }


                                             // LINHA DE RECOLHA 

 // RECEITA OPICIONAL 

  
    else if (receita_linha == 5) {
        let nota_tempo_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA');
        let nota_concentracao_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA');
      
      
        let nota_tempo_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE');
        let nota_concentracao_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE');

        let nota_tempo_acido = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO');
        let note_concentracao_acido = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO');
       
        if (
            nota_tempo_alcalina != 0 && nota_concentracao_alcalina != 0 &&
            nota_tempo_sanitizante != 0 && nota_concentracao_sanitizante &&
            nota_tempo_acido != 0 && note_concentracao_acido != 0 
            
        ) {
            let media = nota_tempo_alcalina + nota_concentracao_alcalina + nota_tempo_sanitizante + nota_concentracao_sanitizante + nota_tempo_acido + note_concentracao_acido ;
            media = media / 6.0;
            return media;

        }
        else {
            return 0
        }
    }

 // RECEITA PERIODICO 

        else if (receita_linha == 4) {
        let nota_tempo_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA');
        let nota_concentracao_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA');
        
      
        let nota_tempo_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE');
        let nota_concentracao_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE');

        let nota_tempo_acido = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO');
        let note_concentracao_acido = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO');

        if (
            nota_tempo_alcalina != 0 && nota_concentracao_alcalina != 0 &&
            nota_tempo_sanitizante != 0 && nota_concentracao_sanitizante &&
            nota_tempo_acido != 0 && note_concentracao_acido 
            
        ) {
            let media = nota_tempo_alcalina + nota_concentracao_alcalina + nota_tempo_sanitizante + nota_concentracao_sanitizante + nota_tempo_acido + note_concentracao_acido + nota_temepratura_alcalina;
            media = media / 6.0;
            return media;

        }
        else {
            return 0
        }
    }

      // RECEITA ROTINA

    else if (receita_linha == 6) {

        let nota_tempo_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE');
        let nota_concentracao_sanitizante = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE');
        
      
        let nota_tempo_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA');
        let note_concentracao_alcalina = flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA');

        if (
            nota_tempo_sanitizante != 0 && nota_concentracao_sanitizante &&
            nota_tempo_alcalina != 0 && note_concentracao_alcalina 
            
        ) {
            let media = nota_tempo_sanitizante + nota_concentracao_sanitizante + nota_tempo_alcalina + note_concentracao_alcalina ;
            media = media / 5.0;
            return media;

        }
        else {
            return 0
        }
    }
    }
      
function notaEtapaTempo(tipo) {
    let inicio, fim;
    if (tipo == 'alcalina') {
        inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
        fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    }
    else if (tipo == 'acido') {
        inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
        fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    }

    else if (tipo == 'sanitizante') {
        inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
        fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    }


    let tempo = (fim - inicio) / 60000;
    if (tempo <= 30) {
        return 0;
    }
    else if (tempo >= 30 && tempo <= 40) {
        return 10;
    }
    else if (tempo > 40 && tempo <= 50) {
        return 9;
    }
    else if (tempo > 50 && tempo <= 60) {
        return 8;
    }
    else if (tempo > 60 && tempo <= 70) {
        return 7;
    }
    else if (tempo > 70 && tempo <= 80) {
        return 6;
    }
    else if (tempo > 80) {
        return 5
    }
}


// NOTA ETAPA CONCENTRAÇÃO ALCALNA 
      
function notaEtapaConcentracao(tipo) {
    if (tipo == 'alcalina') {
        let media = flow.get('CIP_ADF_MEDIA_ALCALINA');
        if (media <= 2.5) {
            return 0;
        }
        else if (media >= 2.5 && media <= 3) {
            return 10;
        }
        else if (media > 3 && media <= 3.5) {
            return 9;
        }
        else if (media > 3.5 && media <= 4) {
            return 8;
        }
        else if (media > 4 && media <= 4.5) {
            return 7;
        }
        else if (media > 4.5 && media <= 5) {
            return 6;
        }
        else if (media > 5) {
            return 5
        }
    }

      // NOTA ETAPA CONCENTRAÇÃO ACIDO 
      
    else if (tipo == 'acido') {
        let media = flow.get('CIP_ADF_MEDIA_ACIDO');
        if (media <= 1.5) {
            return 0;
        }
        else if (media >= 1.5 && media <= 2) {
            return 10;
        }
        else if (media > 2 && media <= 2.5) {
            return 9;
        }
        else if (media > 2.5 && media <= 3) {
            return 8;
        }
        else if (media > 3 && media <= 3.5) {
            return 7;
        }
        else if (media > 3.5 && media <= 4) {
            return 6;
        }
        else if (media > 4) {
            return 5
        }
    }

    // NOTA ETAPA CONCENTRAÇÃO SANITIZANTE
      
    else if (tipo == 'sanitizante') {
        let media = flow.get('CIP_ADF_MEDIA_SANITIZANTE');
        if (media <= 0.15) {
            return 0;
        }
        else if (media >= 0.15 && media <= 0.25) {
            return 10;
        }
        else if (media > 0.25 && media <= 0.3) {
            return 9;
        }
        else if (media > 0.3 && media <= 0.35) {
            return 8;
        }
        else if (media > 0.35 && media <= 0.4) {
            return 7;
        }
        else if (media > 0.4 && media <= 0.45) {
            return 6;
        }
        else if (media > 0.45) {
            return 5
        }
    }
}
// NOTA ETAPA TEMPERATURA 
      
function notaTemperatura(tipo) {
  let temperatura = flow.get('CIP_ADF_TEMPERATURA_ALCALINA');
        if (temperatura <= 80) {
            return 0;  
    }
    else if (temperatura >= 80 && temperatura <= 90) {
        return 10;
    }
    else if (temperatura > 90 && temperatura <= 100) {
        return 9;
    }
    else if (temperatura > 110 && tempo <= 120) {
        return 8;
    }
    else if (temperatura > 120 && temperatura <= 130) {
        return 7;
    }
    else if (temperatura > 130 && temperatura <= 140) {
        return 6;
    }
    else if (temperatura > 140) {
        return 5
    }
}

                                    
                                       //LINHA 01 DE DOSAGEM 
/*
        CIP PERIODICO
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==1 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 1 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;


}


      /*
        CIP OPICIONAL 
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP OPICIONAL 
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP OPICIONAL 

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==2 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 2 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')

    // NOTA OPICIONAL
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;
}


      /*
    CIP ROTINA
    
*/

// INICIO CIRCULAÇÃO ALCALINO CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 3 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP ROTINA

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 3 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 3 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALILNA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA')
    flow.set('CIP_ADF_MEDIA_ALCALINA', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}


// INICIO CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 3 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 3 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}


// FIM CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 3 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA')) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista) 

    }
    return msg;
}

                                             
                                       //LINHA 01 DE RECOLHA
/*
        CIP PERIODICO
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==4 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 4 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;


}


      /*
        CIP OPICIONAL 
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP OPICIONAL 
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP OPICIONAL 

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo:tempo,
        etapa:"alcalina",
        passo:flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==5 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 5 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')

    // NOTA OPICIONAL
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;
}


      /*
    CIP ROTINA
    
*/

// INICIO CIRCULAÇÃO ALCALINO CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 6 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP ROTINA

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 6 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 6 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALILNA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA')
    flow.set('CIP_ADF_MEDIA_ALCALINA', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}


// INICIO CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 6 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 6 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}


// FIM CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 6 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA')) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista) 

    }
    return msg;
}



                                         //LINHA 02 DE DOSAGEM 
/*
        CIP PERIODICO
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==7 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 7 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;


}


      /*
        CIP OPICIONAL 
        
*/

// INICIO CIRCULAÇÃO ALCALINA CIP OPICIONAL 
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP OPICIONAL 

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 8 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')

    // NOTA OPICIONAL
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;
}


      /*
    CIP ROTINA
    
*/

// INICIO CIRCULAÇÃO ALCALINO CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 9 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP ROTINA

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 9 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 9 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALILNA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA')
    flow.set('CIP_ADF_MEDIA_ALCALINA', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}


// INICIO CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 9 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 9 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}


// FIM CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 9 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA')) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista) 

    }
    return msg;
}

                                             
                                       //LINHA 01 DE RECOLHA
/*
        CIP PERIODICO
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==10 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_PERIODICO', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP PERIODICO
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 10 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_PERIODICO')

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;


}


      /*
        CIP OPICIONAL 
        
*/


// INICIO CIRCULAÇÃO ALCALINA CIP OPICIONAL 
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ALCALINA', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP OPICIONAL 

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', lista_concentracao);
    }
    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALINA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ALCALINO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}

// INICIO CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}


// LISTA CONCENTRAÇÃO ACIDO CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 4 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "acido"
    }
    return msg;
}

// FIM CIRCULAÇÃO ACIDO CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 5 && flow.get('CIP_RECEITA_LINHA') ==11 && flow.get('CIP_ADF_ETAPA_ACIDO_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ACIDO_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ACIDO', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_ACIDO', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ACIDO_OPICIONAL', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO', notaEtapaTempo("acido"));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO', notaEtapaConcentracao("acido"));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ACIDO');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ACIDO');
    let tempo = (fim - inicio) / 60000;

    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoAcido: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ACIDO'),
        notaConcentracaoAcido: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ACIDO'),
        tempo: tempo,
        etapa: "acido",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista),
       
    }
    return msg;

}

// INICIO CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP OPICIONAL

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}

// FIM CIRCULAÇÃO SANITIZANTE CIP OPICIONAL
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 11 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL', []);
    flow.set('NOTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_OPICIONAL')

    // NOTA OPICIONAL
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;
}


    /*  
    CIP ROTINA
    
*/



// INICIO CIRCULAÇÃO ALCALINO CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 12 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_ACIDO', Date.now());
}

// LISTA CONCENTRAÇÃO ALCALINA CIP ROTINA

if (flow.get('CIP_PASSO_LINHA') == 2 && flow.get('CIP_RECEITA_LINHA') == 12 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', [flow.get('CIP_CONCENTRACAO_LINHA')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "alcalina"
    }
    return msg;
}

// FIM CIRCULAÇÃO ALCALINA CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 3 && flow.get('CIP_RECEITA_LINHA') == 12 && flow.get('CIP_ADF_ETAPA_ALCALINA_INICIADA') == true) {
    flow.set('CIP_ADF_ETAPA_ALCALINA_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_ALCALILNA', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA')
    flow.set('CIP_ADF_MEDIA_ALCALINA', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_ALCALINA_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA', notaEtapaTempo('alcalina'))
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA', notaEtapaConcentracao('alcalina'));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_ALCALINA');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_ALCALINA');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_ALCALINA'),
        notaConcentracaoAlcalina: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_ALCALINA'),
        tempo: tempo,
        etapa: "alcalina",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista)
    }
    return msg;

}


// INICIO CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 12 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') != true) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', true);
    flow.set('CIP_ADF_INICIO_ETAPA_SANITIZANTE', Date.now());
}


// LISTA CONCENTRAÇÃO SANITIZANTE CIP PERIODICO

if (flow.get('CIP_PASSO_LINHA') == 6 && flow.get('CIP_RECEITA_LINHA') == 12 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA') == true) {

    let lista_concentracao = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA');

    if (lista_concentracao == [] || lista_concentracao == undefined) {
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', [flow.get('CIP_ADF_CONCENTRACAO')]);
    }
    else {
        lista_concentracao.push(flow.get('CIP_CONCENTRACAO_LINHA'))
        flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', lista_concentracao);
    }

    msg.payload = {
        condutividade: flow.get('CIP_CONCENTRACAO_LINHA'),
        linha: flow.get('CIP_EQUIPAMENTO_LINHA'),
        etapa: "sanitizante"
    }
    return msg;
}


// FIM CIRCULAÇÃO SANITIZANTE CIP ROTINA
if (flow.get('CIP_PASSO_LINHA') == 7 && flow.get('CIP_RECEITA_LINHA') == 12 && flow.get('CIP_ADF_ETAPA_SANITIZANTE_INICIADA')) {
    flow.set('CIP_ADF_ETAPA_SANITIZANTE_INICIADA', false);
    flow.set('CIP_ADF_FIM_ETAPA_SANITIZANTE', Date.now());
    let lista = flow.get('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA')
    flow.set('CIP_ADF_MEDIA_SANITIZANTE', media(lista));
    flow.set('LISTA_CIP_ADF_CONCENTRACAO_SANITIZANTE_ROTINA', []);

    // NOTA
    flow.set('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE', notaEtapaTempo('sanitizante'));
    flow.set('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE', notaEtapaConcentracao('sanitizante'));

    // NOTA GERAL
    flow.set('NOTA_LINHA', notaGeral(flow.get('CIP_RECEITA_LINHA')));

    let inicio = flow.get('CIP_ADF_INICIO_ETAPA_SANITIZANTE');
    let fim = flow.get('CIP_ADF_FIM_ETAPA_SANITIZANTE');
    let tempo = (fim - inicio) / 60000;


    msg.payload = {
        linha: flow.get('CIP_EQUIPAMENTO_TINAS'),
        notaTempoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_TEMPO_SANITIZANTE'),
        notaConcentracaoSanitizante: flow.get('CIP_ADF_NOTA_ETAPA_CONCENTRACAO_SANITIZANTE'),
        notaGeral: flow.get('NOTA_LINHA'),
        tempo: tempo,
        etapa: "sanitizante",
        passo: flow.get('CIP_PASSO_LINHA'),
        receita_linha: flow.get('CIP_RECEITA_LINHA'),
        media: media(lista) 

    }
    return msg;
}
      
